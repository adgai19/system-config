local mapper = require("tools.utils")
mapper.nnoremap("<silent> gh", "<cmd>lua require'lspsaga.provider'.lsp_finder()<CR>")
mapper.nnoremap("<silent><leader>ca", "<cmd>lua require('lspsaga.codeaction').code_action()<CR>")
mapper.nnoremap("<silent> K", "<cmd>lua require('lspsaga.hover').render_hover_doc()<CR>")
mapper.nnoremap("<silent> <C-f>", "<cmd>lua require('lspsaga.action').smart_scroll_with_saga(1)<CR>")
mapper.nnoremap("<silent> <C-b>", "<cmd>lua require('lspsaga.action').smart_scroll_with_saga(-1)<CR>")
mapper.nnoremap("<silent> gs", "<cmd>lua require('lspsaga.signaturehelp').signature_help()<CR>")
mapper.nnoremap("<silent>gr", "<cmd>lua require('lspsaga.rename').rename()<CR>")
mapper.nnoremap("<silent> gd", "<cmd>lua require'lspsaga.provider'.preview_definition()<CR>")
mapper.nnoremap("<silent><leader>cd", "<cmd>lua require'lspsaga.diagnostic'.show_line_diagnostics()<CR>")
mapper.nnoremap("<silent><leader>cc", "<cmd>lua require'lspsaga.diagnostic'.show_cursor_diagnostics()<CR>")
mapper.nnoremap("<silent> [e", "<cmd>lua require'lspsaga.diagnostic'.lsp_jump_diagnostic_prev()<CR>")
mapper.nnoremap("<silent> ]e", "<cmd>lua require'lspsaga.diagnostic'.lsp_jump_diagnostic_next()<CR>")
mapper.nnoremap("<silent> <A-d> <cmd>lua", "require('lspsaga.floaterm').open_float_terminal()<CR> ")
mapper.nnoremap("<leader>ff", "<cmd>lua require('telescope.builtin').find_files()<cr>")
mapper.nnoremap("<leader>fg", "<cmd>lua require('telescope.builtin').live_grep()<cr>")
mapper.nnoremap("<leader>fb", "<cmd>lua require('telescope.builtin').buffers()<cr>")
mapper.nnoremap("<leader>fh", "<cmd>lua require('telescope.builtin').help_tags()<cr>")
mapper.nnoremap(
	"<leader>gb",
	"<cmd>lua require('telescope.builtin').git_branches(require('telescope.themes').get_dropdown({previewer=false}))<cr>"
)
mapper.nnoremap("<leader>fc", "<cmd>lua require('plugins.telescope').search_dotfiles()<cr>")
mapper.nnoremap("<leader>fx", "<cmd>lua require('plugins.telescope').file_browser()<cr>")
mapper.nnoremap("<leader>fw", "<cmd>lua require('plugins.telescope').find_word()<cr>")
mapper.nnoremap("<leader>fa", "<cmd>Telescope frecency<cr>")
mapper.nnoremap("<leader>f", "<cmd>Telescope <cr>")
mapper.nnoremap("<leader>fcs <cmd>Telescope", "cheat fd<cr>")
mapper.nnoremap("<leader>fp", "<cmd>lua require'telescope'.extensions.project.project{}<CR>")
mapper.nnoremap(" aj", ":ALENext<CR>")
mapper.nnoremap(" ak", ":ALEPrevious<CR>")
mapper.vnoremap("<silent><leader>ca :<C-U>lua", "require('lspsaga.codeaction').range_code_action()<CR>")
-- mapper.tnoremap("<silent> <A-d> <C-\\><C-n>:lua", "require('lspsaga.floaterm').close_float_terminal()<CR>")
mapper.nnoremap("<buffer> <c-k> :call", "LuaFormat()<cr>")
mapper.nnoremap('<leader>vj :call VimuxRunCommand("gradle", "test")<CR>)')

mapper.nnoremap("<leader>vw", ':w<CR>:call VimuxRunCommand("latexmk", "Main_file.tex")<CR>')
mapper.nnoremap('<leader>vg :call VimuxRunCommand("go", "test")<CR>')
mapper.nnoremap("<Leader>vx", ":VimuxInterruptRunner<CR>")
mapper.nnoremap("<Leader>vl", ":VimuxRunLastCommand<CR>")
mapper.nnoremap("<Leader>vp", ":VimuxPromptCommand<CR>")
mapper.nnoremap("<Leader>vq", ":VimuxCloseRunner<CR>")
mapper.nnoremap('<Leader>vp :call VimuxRunCommand("clear; python " .", "bufname("%"))<CR>')
